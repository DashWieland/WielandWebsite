<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Dash Wieland</title>
    <link>/post/</link>
    <description>Recent content in Posts on Dash Wieland</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Dec 2016 21:49:57 -0700</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/2016/12/30/a-plain-markdown-post/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>/2016/12/30/a-plain-markdown-post/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>/2015/01/01/lorem-ipsum/</link>
      <pubDate>Thu, 01 Jan 2015 13:09:13 -0600</pubDate>
      
      <guid>/2015/01/01/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
    <item>
      <title>Seasonality in Seattle Bike Traffic</title>
      <link>/1/01/01/seasonality-in-seattle-bike-traffic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/01/seasonality-in-seattle-bike-traffic/</guid>
      <description>Weekly bike traffic in Seattle This week’s #TidyTuesday dataset is bike traffic in Seattle. Interestingly, this isn’t geographic data-though we could add that by finding the coordinates of the counting stations-so instead I thought it might be interesting to capture the seasonality of bike traffic at different counting stations.
Start by loading the required packages and downloading the data from GitHub.
library(dplyr) library(lubridate) library(ggplot2) library(RColorBrewer) bike_traffic &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-02/bike_traffic.csv&amp;quot;, col_types = &amp;#39;cccdd&amp;#39;)   Prepping data for plotting Formatting dates with lubridate The first thing to do is get our dates in a workable format.</description>
    </item>
    
  </channel>
</rss>